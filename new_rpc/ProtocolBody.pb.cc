// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ProtocolBody.proto

#include "ProtocolBody.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

class ProtocolBodyRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ProtocolBodyRequest>
      _instance;
} _ProtocolBodyRequest_default_instance_;
class ProtocolBodyResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ProtocolBodyResponse>
      _instance;
} _ProtocolBodyResponse_default_instance_;
namespace protobuf_ProtocolBody_2eproto {
static void InitDefaultsProtocolBodyRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_ProtocolBodyRequest_default_instance_;
    new (ptr) ::ProtocolBodyRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ProtocolBodyRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ProtocolBodyRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsProtocolBodyRequest}, {}};

static void InitDefaultsProtocolBodyResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_ProtocolBodyResponse_default_instance_;
    new (ptr) ::ProtocolBodyResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ProtocolBodyResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ProtocolBodyResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsProtocolBodyResponse}, {}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_ProtocolBodyRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ProtocolBodyResponse.base);
}

::google::protobuf::Metadata file_level_metadata[2];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtocolBodyRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtocolBodyRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtocolBodyRequest, servicename_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtocolBodyRequest, methodindex_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtocolBodyRequest, callid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtocolBodyRequest, content_),
  0,
  2,
  3,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtocolBodyResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtocolBodyResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtocolBodyResponse, callid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtocolBodyResponse, content_),
  1,
  0,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 9, sizeof(::ProtocolBodyRequest)},
  { 13, 20, sizeof(::ProtocolBodyResponse)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::_ProtocolBodyRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_ProtocolBodyResponse_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "ProtocolBody.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 2);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\022ProtocolBody.proto\"`\n\023ProtocolBodyRequ"
      "est\022\023\n\013serviceName\030\001 \001(\t\022\023\n\013methodIndex\030"
      "\002 \001(\r\022\016\n\006callId\030\003 \001(\r\022\017\n\007content\030\004 \001(\014\"7"
      "\n\024ProtocolBodyResponse\022\016\n\006callId\030\001 \001(\r\022\017"
      "\n\007content\030\002 \001(\014B\003\200\001\001"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 180);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "ProtocolBody.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_ProtocolBody_2eproto

// ===================================================================

void ProtocolBodyRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ProtocolBodyRequest::kServiceNameFieldNumber;
const int ProtocolBodyRequest::kMethodIndexFieldNumber;
const int ProtocolBodyRequest::kCallIdFieldNumber;
const int ProtocolBodyRequest::kContentFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ProtocolBodyRequest::ProtocolBodyRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ProtocolBody_2eproto::scc_info_ProtocolBodyRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtocolBodyRequest)
}
ProtocolBodyRequest::ProtocolBodyRequest(const ProtocolBodyRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  servicename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_servicename()) {
    servicename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.servicename_);
  }
  content_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_content()) {
    content_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.content_);
  }
  ::memcpy(&methodindex_, &from.methodindex_,
    static_cast<size_t>(reinterpret_cast<char*>(&callid_) -
    reinterpret_cast<char*>(&methodindex_)) + sizeof(callid_));
  // @@protoc_insertion_point(copy_constructor:ProtocolBodyRequest)
}

void ProtocolBodyRequest::SharedCtor() {
  servicename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  content_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&methodindex_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&callid_) -
      reinterpret_cast<char*>(&methodindex_)) + sizeof(callid_));
}

ProtocolBodyRequest::~ProtocolBodyRequest() {
  // @@protoc_insertion_point(destructor:ProtocolBodyRequest)
  SharedDtor();
}

void ProtocolBodyRequest::SharedDtor() {
  servicename_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  content_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ProtocolBodyRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ProtocolBodyRequest::descriptor() {
  ::protobuf_ProtocolBody_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ProtocolBody_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ProtocolBodyRequest& ProtocolBodyRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ProtocolBody_2eproto::scc_info_ProtocolBodyRequest.base);
  return *internal_default_instance();
}


void ProtocolBodyRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ProtocolBodyRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      servicename_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      content_.ClearNonDefaultToEmptyNoArena();
    }
  }
  if (cached_has_bits & 12u) {
    ::memset(&methodindex_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&callid_) -
        reinterpret_cast<char*>(&methodindex_)) + sizeof(callid_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ProtocolBodyRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtocolBodyRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string serviceName = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_servicename()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->servicename().data(), static_cast<int>(this->servicename().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "ProtocolBodyRequest.serviceName");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 methodIndex = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_methodindex();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &methodindex_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 callId = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_callid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &callid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes content = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_content()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtocolBodyRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtocolBodyRequest)
  return false;
#undef DO_
}

void ProtocolBodyRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtocolBodyRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string serviceName = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->servicename().data(), static_cast<int>(this->servicename().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ProtocolBodyRequest.serviceName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->servicename(), output);
  }

  // optional uint32 methodIndex = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->methodindex(), output);
  }

  // optional uint32 callId = 3;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->callid(), output);
  }

  // optional bytes content = 4;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      4, this->content(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ProtocolBodyRequest)
}

::google::protobuf::uint8* ProtocolBodyRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ProtocolBodyRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string serviceName = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->servicename().data(), static_cast<int>(this->servicename().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ProtocolBodyRequest.serviceName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->servicename(), target);
  }

  // optional uint32 methodIndex = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->methodindex(), target);
  }

  // optional uint32 callId = 3;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->callid(), target);
  }

  // optional bytes content = 4;
  if (cached_has_bits & 0x00000002u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        4, this->content(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtocolBodyRequest)
  return target;
}

size_t ProtocolBodyRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ProtocolBodyRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 15u) {
    // optional string serviceName = 1;
    if (has_servicename()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->servicename());
    }

    // optional bytes content = 4;
    if (has_content()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->content());
    }

    // optional uint32 methodIndex = 2;
    if (has_methodindex()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->methodindex());
    }

    // optional uint32 callId = 3;
    if (has_callid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->callid());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ProtocolBodyRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ProtocolBodyRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ProtocolBodyRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ProtocolBodyRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ProtocolBodyRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ProtocolBodyRequest)
    MergeFrom(*source);
  }
}

void ProtocolBodyRequest::MergeFrom(const ProtocolBodyRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ProtocolBodyRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_servicename();
      servicename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.servicename_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_content();
      content_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.content_);
    }
    if (cached_has_bits & 0x00000004u) {
      methodindex_ = from.methodindex_;
    }
    if (cached_has_bits & 0x00000008u) {
      callid_ = from.callid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ProtocolBodyRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ProtocolBodyRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProtocolBodyRequest::CopyFrom(const ProtocolBodyRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ProtocolBodyRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProtocolBodyRequest::IsInitialized() const {
  return true;
}

void ProtocolBodyRequest::Swap(ProtocolBodyRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ProtocolBodyRequest::InternalSwap(ProtocolBodyRequest* other) {
  using std::swap;
  servicename_.Swap(&other->servicename_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  content_.Swap(&other->content_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(methodindex_, other->methodindex_);
  swap(callid_, other->callid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ProtocolBodyRequest::GetMetadata() const {
  protobuf_ProtocolBody_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ProtocolBody_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ProtocolBodyResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ProtocolBodyResponse::kCallIdFieldNumber;
const int ProtocolBodyResponse::kContentFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ProtocolBodyResponse::ProtocolBodyResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ProtocolBody_2eproto::scc_info_ProtocolBodyResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtocolBodyResponse)
}
ProtocolBodyResponse::ProtocolBodyResponse(const ProtocolBodyResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  content_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_content()) {
    content_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.content_);
  }
  callid_ = from.callid_;
  // @@protoc_insertion_point(copy_constructor:ProtocolBodyResponse)
}

void ProtocolBodyResponse::SharedCtor() {
  content_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  callid_ = 0u;
}

ProtocolBodyResponse::~ProtocolBodyResponse() {
  // @@protoc_insertion_point(destructor:ProtocolBodyResponse)
  SharedDtor();
}

void ProtocolBodyResponse::SharedDtor() {
  content_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ProtocolBodyResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ProtocolBodyResponse::descriptor() {
  ::protobuf_ProtocolBody_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ProtocolBody_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ProtocolBodyResponse& ProtocolBodyResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ProtocolBody_2eproto::scc_info_ProtocolBodyResponse.base);
  return *internal_default_instance();
}


void ProtocolBodyResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:ProtocolBodyResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    content_.ClearNonDefaultToEmptyNoArena();
  }
  callid_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ProtocolBodyResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtocolBodyResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 callId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_callid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &callid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes content = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_content()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtocolBodyResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtocolBodyResponse)
  return false;
#undef DO_
}

void ProtocolBodyResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtocolBodyResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 callId = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->callid(), output);
  }

  // optional bytes content = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->content(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ProtocolBodyResponse)
}

::google::protobuf::uint8* ProtocolBodyResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ProtocolBodyResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 callId = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->callid(), target);
  }

  // optional bytes content = 2;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->content(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtocolBodyResponse)
  return target;
}

size_t ProtocolBodyResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ProtocolBodyResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional bytes content = 2;
    if (has_content()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->content());
    }

    // optional uint32 callId = 1;
    if (has_callid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->callid());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ProtocolBodyResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ProtocolBodyResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ProtocolBodyResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ProtocolBodyResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ProtocolBodyResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ProtocolBodyResponse)
    MergeFrom(*source);
  }
}

void ProtocolBodyResponse::MergeFrom(const ProtocolBodyResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ProtocolBodyResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_content();
      content_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.content_);
    }
    if (cached_has_bits & 0x00000002u) {
      callid_ = from.callid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ProtocolBodyResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ProtocolBodyResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProtocolBodyResponse::CopyFrom(const ProtocolBodyResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ProtocolBodyResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProtocolBodyResponse::IsInitialized() const {
  return true;
}

void ProtocolBodyResponse::Swap(ProtocolBodyResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ProtocolBodyResponse::InternalSwap(ProtocolBodyResponse* other) {
  using std::swap;
  content_.Swap(&other->content_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(callid_, other->callid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ProtocolBodyResponse::GetMetadata() const {
  protobuf_ProtocolBody_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ProtocolBody_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ProtocolBodyRequest* Arena::CreateMaybeMessage< ::ProtocolBodyRequest >(Arena* arena) {
  return Arena::CreateInternal< ::ProtocolBodyRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ProtocolBodyResponse* Arena::CreateMaybeMessage< ::ProtocolBodyResponse >(Arena* arena) {
  return Arena::CreateInternal< ::ProtocolBodyResponse >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
