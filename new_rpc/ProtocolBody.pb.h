// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ProtocolBody.proto

#ifndef PROTOBUF_INCLUDED_ProtocolBody_2eproto
#define PROTOBUF_INCLUDED_ProtocolBody_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_ProtocolBody_2eproto 

namespace protobuf_ProtocolBody_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[2];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_ProtocolBody_2eproto
class ProtocolBodyRequest;
class ProtocolBodyRequestDefaultTypeInternal;
extern ProtocolBodyRequestDefaultTypeInternal _ProtocolBodyRequest_default_instance_;
class ProtocolBodyResponse;
class ProtocolBodyResponseDefaultTypeInternal;
extern ProtocolBodyResponseDefaultTypeInternal _ProtocolBodyResponse_default_instance_;
namespace google {
namespace protobuf {
template<> ::ProtocolBodyRequest* Arena::CreateMaybeMessage<::ProtocolBodyRequest>(Arena*);
template<> ::ProtocolBodyResponse* Arena::CreateMaybeMessage<::ProtocolBodyResponse>(Arena*);
}  // namespace protobuf
}  // namespace google

// ===================================================================

class ProtocolBodyRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ProtocolBodyRequest) */ {
 public:
  ProtocolBodyRequest();
  virtual ~ProtocolBodyRequest();

  ProtocolBodyRequest(const ProtocolBodyRequest& from);

  inline ProtocolBodyRequest& operator=(const ProtocolBodyRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ProtocolBodyRequest(ProtocolBodyRequest&& from) noexcept
    : ProtocolBodyRequest() {
    *this = ::std::move(from);
  }

  inline ProtocolBodyRequest& operator=(ProtocolBodyRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ProtocolBodyRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ProtocolBodyRequest* internal_default_instance() {
    return reinterpret_cast<const ProtocolBodyRequest*>(
               &_ProtocolBodyRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(ProtocolBodyRequest* other);
  friend void swap(ProtocolBodyRequest& a, ProtocolBodyRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ProtocolBodyRequest* New() const final {
    return CreateMaybeMessage<ProtocolBodyRequest>(NULL);
  }

  ProtocolBodyRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ProtocolBodyRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ProtocolBodyRequest& from);
  void MergeFrom(const ProtocolBodyRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ProtocolBodyRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string serviceName = 1;
  bool has_servicename() const;
  void clear_servicename();
  static const int kServiceNameFieldNumber = 1;
  const ::std::string& servicename() const;
  void set_servicename(const ::std::string& value);
  #if LANG_CXX11
  void set_servicename(::std::string&& value);
  #endif
  void set_servicename(const char* value);
  void set_servicename(const char* value, size_t size);
  ::std::string* mutable_servicename();
  ::std::string* release_servicename();
  void set_allocated_servicename(::std::string* servicename);

  // optional bytes content = 4;
  bool has_content() const;
  void clear_content();
  static const int kContentFieldNumber = 4;
  const ::std::string& content() const;
  void set_content(const ::std::string& value);
  #if LANG_CXX11
  void set_content(::std::string&& value);
  #endif
  void set_content(const char* value);
  void set_content(const void* value, size_t size);
  ::std::string* mutable_content();
  ::std::string* release_content();
  void set_allocated_content(::std::string* content);

  // optional uint32 methodIndex = 2;
  bool has_methodindex() const;
  void clear_methodindex();
  static const int kMethodIndexFieldNumber = 2;
  ::google::protobuf::uint32 methodindex() const;
  void set_methodindex(::google::protobuf::uint32 value);

  // optional uint32 callId = 3;
  bool has_callid() const;
  void clear_callid();
  static const int kCallIdFieldNumber = 3;
  ::google::protobuf::uint32 callid() const;
  void set_callid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ProtocolBodyRequest)
 private:
  void set_has_servicename();
  void clear_has_servicename();
  void set_has_methodindex();
  void clear_has_methodindex();
  void set_has_callid();
  void clear_has_callid();
  void set_has_content();
  void clear_has_content();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr servicename_;
  ::google::protobuf::internal::ArenaStringPtr content_;
  ::google::protobuf::uint32 methodindex_;
  ::google::protobuf::uint32 callid_;
  friend struct ::protobuf_ProtocolBody_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ProtocolBodyResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ProtocolBodyResponse) */ {
 public:
  ProtocolBodyResponse();
  virtual ~ProtocolBodyResponse();

  ProtocolBodyResponse(const ProtocolBodyResponse& from);

  inline ProtocolBodyResponse& operator=(const ProtocolBodyResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ProtocolBodyResponse(ProtocolBodyResponse&& from) noexcept
    : ProtocolBodyResponse() {
    *this = ::std::move(from);
  }

  inline ProtocolBodyResponse& operator=(ProtocolBodyResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ProtocolBodyResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ProtocolBodyResponse* internal_default_instance() {
    return reinterpret_cast<const ProtocolBodyResponse*>(
               &_ProtocolBodyResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(ProtocolBodyResponse* other);
  friend void swap(ProtocolBodyResponse& a, ProtocolBodyResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ProtocolBodyResponse* New() const final {
    return CreateMaybeMessage<ProtocolBodyResponse>(NULL);
  }

  ProtocolBodyResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ProtocolBodyResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ProtocolBodyResponse& from);
  void MergeFrom(const ProtocolBodyResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ProtocolBodyResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bytes content = 2;
  bool has_content() const;
  void clear_content();
  static const int kContentFieldNumber = 2;
  const ::std::string& content() const;
  void set_content(const ::std::string& value);
  #if LANG_CXX11
  void set_content(::std::string&& value);
  #endif
  void set_content(const char* value);
  void set_content(const void* value, size_t size);
  ::std::string* mutable_content();
  ::std::string* release_content();
  void set_allocated_content(::std::string* content);

  // optional uint32 callId = 1;
  bool has_callid() const;
  void clear_callid();
  static const int kCallIdFieldNumber = 1;
  ::google::protobuf::uint32 callid() const;
  void set_callid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ProtocolBodyResponse)
 private:
  void set_has_callid();
  void clear_has_callid();
  void set_has_content();
  void clear_has_content();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr content_;
  ::google::protobuf::uint32 callid_;
  friend struct ::protobuf_ProtocolBody_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// ProtocolBodyRequest

// optional string serviceName = 1;
inline bool ProtocolBodyRequest::has_servicename() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProtocolBodyRequest::set_has_servicename() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProtocolBodyRequest::clear_has_servicename() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProtocolBodyRequest::clear_servicename() {
  servicename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_servicename();
}
inline const ::std::string& ProtocolBodyRequest::servicename() const {
  // @@protoc_insertion_point(field_get:ProtocolBodyRequest.serviceName)
  return servicename_.GetNoArena();
}
inline void ProtocolBodyRequest::set_servicename(const ::std::string& value) {
  set_has_servicename();
  servicename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ProtocolBodyRequest.serviceName)
}
#if LANG_CXX11
inline void ProtocolBodyRequest::set_servicename(::std::string&& value) {
  set_has_servicename();
  servicename_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ProtocolBodyRequest.serviceName)
}
#endif
inline void ProtocolBodyRequest::set_servicename(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_servicename();
  servicename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ProtocolBodyRequest.serviceName)
}
inline void ProtocolBodyRequest::set_servicename(const char* value, size_t size) {
  set_has_servicename();
  servicename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ProtocolBodyRequest.serviceName)
}
inline ::std::string* ProtocolBodyRequest::mutable_servicename() {
  set_has_servicename();
  // @@protoc_insertion_point(field_mutable:ProtocolBodyRequest.serviceName)
  return servicename_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ProtocolBodyRequest::release_servicename() {
  // @@protoc_insertion_point(field_release:ProtocolBodyRequest.serviceName)
  if (!has_servicename()) {
    return NULL;
  }
  clear_has_servicename();
  return servicename_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ProtocolBodyRequest::set_allocated_servicename(::std::string* servicename) {
  if (servicename != NULL) {
    set_has_servicename();
  } else {
    clear_has_servicename();
  }
  servicename_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), servicename);
  // @@protoc_insertion_point(field_set_allocated:ProtocolBodyRequest.serviceName)
}

// optional uint32 methodIndex = 2;
inline bool ProtocolBodyRequest::has_methodindex() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ProtocolBodyRequest::set_has_methodindex() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ProtocolBodyRequest::clear_has_methodindex() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ProtocolBodyRequest::clear_methodindex() {
  methodindex_ = 0u;
  clear_has_methodindex();
}
inline ::google::protobuf::uint32 ProtocolBodyRequest::methodindex() const {
  // @@protoc_insertion_point(field_get:ProtocolBodyRequest.methodIndex)
  return methodindex_;
}
inline void ProtocolBodyRequest::set_methodindex(::google::protobuf::uint32 value) {
  set_has_methodindex();
  methodindex_ = value;
  // @@protoc_insertion_point(field_set:ProtocolBodyRequest.methodIndex)
}

// optional uint32 callId = 3;
inline bool ProtocolBodyRequest::has_callid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ProtocolBodyRequest::set_has_callid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ProtocolBodyRequest::clear_has_callid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ProtocolBodyRequest::clear_callid() {
  callid_ = 0u;
  clear_has_callid();
}
inline ::google::protobuf::uint32 ProtocolBodyRequest::callid() const {
  // @@protoc_insertion_point(field_get:ProtocolBodyRequest.callId)
  return callid_;
}
inline void ProtocolBodyRequest::set_callid(::google::protobuf::uint32 value) {
  set_has_callid();
  callid_ = value;
  // @@protoc_insertion_point(field_set:ProtocolBodyRequest.callId)
}

// optional bytes content = 4;
inline bool ProtocolBodyRequest::has_content() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ProtocolBodyRequest::set_has_content() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ProtocolBodyRequest::clear_has_content() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ProtocolBodyRequest::clear_content() {
  content_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_content();
}
inline const ::std::string& ProtocolBodyRequest::content() const {
  // @@protoc_insertion_point(field_get:ProtocolBodyRequest.content)
  return content_.GetNoArena();
}
inline void ProtocolBodyRequest::set_content(const ::std::string& value) {
  set_has_content();
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ProtocolBodyRequest.content)
}
#if LANG_CXX11
inline void ProtocolBodyRequest::set_content(::std::string&& value) {
  set_has_content();
  content_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ProtocolBodyRequest.content)
}
#endif
inline void ProtocolBodyRequest::set_content(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_content();
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ProtocolBodyRequest.content)
}
inline void ProtocolBodyRequest::set_content(const void* value, size_t size) {
  set_has_content();
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ProtocolBodyRequest.content)
}
inline ::std::string* ProtocolBodyRequest::mutable_content() {
  set_has_content();
  // @@protoc_insertion_point(field_mutable:ProtocolBodyRequest.content)
  return content_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ProtocolBodyRequest::release_content() {
  // @@protoc_insertion_point(field_release:ProtocolBodyRequest.content)
  if (!has_content()) {
    return NULL;
  }
  clear_has_content();
  return content_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ProtocolBodyRequest::set_allocated_content(::std::string* content) {
  if (content != NULL) {
    set_has_content();
  } else {
    clear_has_content();
  }
  content_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), content);
  // @@protoc_insertion_point(field_set_allocated:ProtocolBodyRequest.content)
}

// -------------------------------------------------------------------

// ProtocolBodyResponse

// optional uint32 callId = 1;
inline bool ProtocolBodyResponse::has_callid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ProtocolBodyResponse::set_has_callid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ProtocolBodyResponse::clear_has_callid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ProtocolBodyResponse::clear_callid() {
  callid_ = 0u;
  clear_has_callid();
}
inline ::google::protobuf::uint32 ProtocolBodyResponse::callid() const {
  // @@protoc_insertion_point(field_get:ProtocolBodyResponse.callId)
  return callid_;
}
inline void ProtocolBodyResponse::set_callid(::google::protobuf::uint32 value) {
  set_has_callid();
  callid_ = value;
  // @@protoc_insertion_point(field_set:ProtocolBodyResponse.callId)
}

// optional bytes content = 2;
inline bool ProtocolBodyResponse::has_content() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProtocolBodyResponse::set_has_content() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProtocolBodyResponse::clear_has_content() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProtocolBodyResponse::clear_content() {
  content_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_content();
}
inline const ::std::string& ProtocolBodyResponse::content() const {
  // @@protoc_insertion_point(field_get:ProtocolBodyResponse.content)
  return content_.GetNoArena();
}
inline void ProtocolBodyResponse::set_content(const ::std::string& value) {
  set_has_content();
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ProtocolBodyResponse.content)
}
#if LANG_CXX11
inline void ProtocolBodyResponse::set_content(::std::string&& value) {
  set_has_content();
  content_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ProtocolBodyResponse.content)
}
#endif
inline void ProtocolBodyResponse::set_content(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_content();
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ProtocolBodyResponse.content)
}
inline void ProtocolBodyResponse::set_content(const void* value, size_t size) {
  set_has_content();
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ProtocolBodyResponse.content)
}
inline ::std::string* ProtocolBodyResponse::mutable_content() {
  set_has_content();
  // @@protoc_insertion_point(field_mutable:ProtocolBodyResponse.content)
  return content_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ProtocolBodyResponse::release_content() {
  // @@protoc_insertion_point(field_release:ProtocolBodyResponse.content)
  if (!has_content()) {
    return NULL;
  }
  clear_has_content();
  return content_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ProtocolBodyResponse::set_allocated_content(::std::string* content) {
  if (content != NULL) {
    set_has_content();
  } else {
    clear_has_content();
  }
  content_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), content);
  // @@protoc_insertion_point(field_set_allocated:ProtocolBodyResponse.content)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_ProtocolBody_2eproto
